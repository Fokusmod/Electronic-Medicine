name: deploy project
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: get repository code
        uses: actions/checkout@v3

      - name: setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 18
          distribution: corretto

      - name: cache maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: setup Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2

      - name: maven tests
        run: mvn -f */pom.xml clean verify

  build:
    needs: test
    strategy:
      matrix:
        java-version: [ 17, 18 ]
        os: [ ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: get repository code
        uses: actions/checkout@v3

      - name: setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: corretto

      - name: cache maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: setup Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2

      - name: maven install
        run: mvn -f */pom.xml clean install -DskipTests
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        run: |
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 90.156.158.203 >> ~/.ssh/known_hosts
      - name: Connect to SSH Server
        run: |
          ssh ${{ secrets.HOST }}
      - name: change directory
        run: cd Electronic-Medicine
      - name: github pull
        run: git pull
      - name: build project to cloud
        run: docker compose up --build
